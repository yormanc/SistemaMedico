/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
import javax.swing.JOptionPane;
import Services.MedicSystemService;
import models.Doctor;
import models.Speciality;
import repositories.DoctorRepository;

/**
 *
 * @author WINDOWS 11
 */
public class FrmModifyDoctor extends javax.swing.JFrame {
    private final MedicSystemService medicSystemService;
    private final Doctor currentDoctor;
    
    /**
     * Creates new form FrmModifyDoctor
     */
    public FrmModifyDoctor(MedicSystemService medicSystemService, Doctor doctor) {
        this.medicSystemService = medicSystemService;
        this.currentDoctor = doctor;
        initComponents();
        loadSpecialities();
        loadDoctorData();
    }
    
    private void loadSpecialities() {
        jcmbEspecialidad.removeAllItems();
        for (Speciality s : medicSystemService.specialityRepository.getAll()) {
            jcmbEspecialidad.addItem(s);
        }
    }
    
    private void loadDoctorData() {
        if (currentDoctor == null) {
            JOptionPane.showMessageDialog(this, "Error: No se proporcionó un doctor válido");
            this.dispose();
            return;
        }
        
        jtextNombreCompleto.setText(currentDoctor.getFullName());
        jtextEdad.setText(String.valueOf(currentDoctor.getAge()));
        jtextEmail.setText(currentDoctor.getEmail());
        jtextNumeroDocumento.setText(String.valueOf(currentDoctor.getCredentials().getId()));
        jtextNumeroDocumento.setEnabled(false);
        
        // Seleccionar la especialidad actual del doctor
        for (int i = 0; i < jcmbEspecialidad.getItemCount(); i++) {
            Speciality s = jcmbEspecialidad.getItemAt(i);
            if (s.getSpecialityId() == currentDoctor.getSpeciality().getSpecialityId()) {
                jcmbEspecialidad.setSelectedIndex(i);
                break;
            }
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpnlModificar = new javax.swing.JPanel();
        jlblModificarUsuario = new javax.swing.JLabel();
        jlblNombreCompleto = new javax.swing.JLabel();
        jtextNombreCompleto = new javax.swing.JTextField();
        jlblNumeroDocumento = new javax.swing.JLabel();
        jtextNumeroDocumento = new javax.swing.JTextField();
        jlblContrasenna = new javax.swing.JLabel();
        jtextContrasenna = new javax.swing.JTextField();
        jlblEdad = new javax.swing.JLabel();
        jtextEdad = new javax.swing.JTextField();
        jlblEmail = new javax.swing.JLabel();
        jtextEmail = new javax.swing.JTextField();
        jlblEspecialidad = new javax.swing.JLabel();
        jcmbEspecialidad = new javax.swing.JComboBox<>();
        jbtnModificar = new javax.swing.JButton();
        jbtnCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Modificar Medico");
        setResizable(false);

        jlblModificarUsuario.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jlblModificarUsuario.setText(" Modificar Medico");

        jlblNombreCompleto.setText(" Nombre Completo");
        jlblNombreCompleto.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jlblNumeroDocumento.setText(" Numero Documento");
        jlblNumeroDocumento.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jtextNumeroDocumento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtextNumeroDocumentoActionPerformed(evt);
            }
        });

        jlblContrasenna.setText("       Contraseña");
        jlblContrasenna.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jlblEdad.setText("            Edad");
        jlblEdad.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jtextEdad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtextEdadActionPerformed(evt);
            }
        });

        jlblEmail.setText("            Email");
        jlblEmail.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jlblEspecialidad.setText("     Especialidad");
        jlblEspecialidad.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jcmbEspecialidad.setModel(new javax.swing.DefaultComboBoxModel<>());

        jbtnModificar.setText("Modificar");
        jbtnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnModificarActionPerformed(evt);
            }
        });

        jbtnCancelar.setText("Cancelar");
        jbtnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpnlModificarLayout = new javax.swing.GroupLayout(jpnlModificar);
        jpnlModificar.setLayout(jpnlModificarLayout);
        jpnlModificarLayout.setHorizontalGroup(
            jpnlModificarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlModificarLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jpnlModificarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpnlModificarLayout.createSequentialGroup()
                        .addComponent(jlblNumeroDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jtextNumeroDocumento))
                    .addGroup(jpnlModificarLayout.createSequentialGroup()
                        .addComponent(jlblNombreCompleto, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jtextNombreCompleto))
                    .addGroup(jpnlModificarLayout.createSequentialGroup()
                        .addGroup(jpnlModificarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jlblEspecialidad, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jlblEmail, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                            .addComponent(jlblEdad, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jlblContrasenna, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jpnlModificarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtextContrasenna)
                            .addComponent(jtextEdad, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                            .addComponent(jtextEmail)
                            .addComponent(jcmbEspecialidad, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(50, 50, 50))
            .addGroup(jpnlModificarLayout.createSequentialGroup()
                .addGap(96, 96, 96)
                .addComponent(jlblModificarUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jpnlModificarLayout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(jbtnModificar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbtnCancelar)
                .addGap(79, 79, 79))
        );
        jpnlModificarLayout.setVerticalGroup(
            jpnlModificarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlModificarLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jlblModificarUsuario)
                .addGap(18, 18, 18)
                .addGroup(jpnlModificarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblNombreCompleto)
                    .addComponent(jtextNombreCompleto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpnlModificarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblNumeroDocumento)
                    .addComponent(jtextNumeroDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpnlModificarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblContrasenna)
                    .addComponent(jtextContrasenna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jpnlModificarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblEdad)
                    .addComponent(jtextEdad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jpnlModificarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblEmail)
                    .addComponent(jtextEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpnlModificarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblEspecialidad)
                    .addComponent(jcmbEspecialidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jpnlModificarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnModificar)
                    .addComponent(jbtnCancelar))
                .addContainerGap(82, Short.MAX_VALUE))
        );

        jlblNombreCompleto.getAccessibleContext().setAccessibleParent(jlblNombreCompleto);
        jtextNombreCompleto.getAccessibleContext().setAccessibleParent(jtextNombreCompleto);
        jlblNumeroDocumento.getAccessibleContext().setAccessibleParent(jlblNumeroDocumento);
        jtextNumeroDocumento.getAccessibleContext().setAccessibleParent(jtextNumeroDocumento);
        jlblContrasenna.getAccessibleContext().setAccessibleParent(jlblContrasenna);
        jtextContrasenna.getAccessibleContext().setAccessibleParent(jtextContrasenna);
        jlblEdad.getAccessibleContext().setAccessibleParent(jlblEdad);
        jtextEdad.getAccessibleContext().setAccessibleParent(jtextEdad);
        jlblEmail.getAccessibleContext().setAccessibleParent(jlblEmail);
        jtextEmail.getAccessibleContext().setAccessibleParent(jtextEmail);
        jlblEspecialidad.getAccessibleContext().setAccessibleParent(jlblEspecialidad);
        jcmbEspecialidad.getAccessibleContext().setAccessibleParent(jcmbEspecialidad);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpnlModificar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpnlModificar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jpnlModificar.getAccessibleContext().setAccessibleParent(jpnlModificar);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtextNumeroDocumentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtextNumeroDocumentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtextNumeroDocumentoActionPerformed

    private void jtextEdadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtextEdadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtextEdadActionPerformed

    private void jbtnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnModificarActionPerformed
        try {
            String name = jtextNombreCompleto.getText().trim();
            String ageText = jtextEdad.getText().trim();
            String email = jtextEmail.getText().trim();
            String password = jtextContrasenna.getText().trim();

            // Validaciones
            if (name.isEmpty() || ageText.isEmpty() || email.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Debe llenar todos los campos obligatorios");
                return;
            }

            int age = Integer.parseInt(ageText);

            if (age <= 0 || age > 150) {
                JOptionPane.showMessageDialog(this, "La edad debe estar entre 1 y 150");
                return;
            }

            if (!email.contains("@") || !email.contains(".")) {
                JOptionPane.showMessageDialog(this, "Email inválido");
                return;
            }

            // Si ingresó contraseña nueva, validarla
            if (!password.isEmpty() && password.length() < 6) {
                JOptionPane.showMessageDialog(this, 
                    "La contraseña debe tener al menos 6 caracteres");
                return;
            }

            // Obtener especialidad seleccionada
            Speciality speciality = (Speciality) jcmbEspecialidad.getSelectedItem();
            if (speciality == null) {
                JOptionPane.showMessageDialog(this, "Debe seleccionar una especialidad");
                return;
            }

            // Actualizar el doctor
            currentDoctor.setFullName(name);
            currentDoctor.setAge(age);
            currentDoctor.setEmail(email);
            currentDoctor.setSpecialty(speciality);
            
            // Si hay contraseña nueva, actualizarla
            if (!password.isEmpty()) {
                currentDoctor.getCredentials().setPassword(password);
            }

            boolean updated = medicSystemService.doctorRepository.update(currentDoctor);

            if (updated) {
                JOptionPane.showMessageDialog(this, "Médico actualizado correctamente");
                this.dispose();
            } else {
                JOptionPane.showMessageDialog(this, "Error al actualizar el médico");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "La edad debe ser un número válido");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }
    }//GEN-LAST:event_jbtnModificarActionPerformed

    private void jbtnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnCancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_jbtnCancelarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmModifyDoctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmModifyDoctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmModifyDoctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmModifyDoctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JOptionPane.showMessageDialog(null, 
                    "Este formulario requiere un objeto Doctor válido.\n" +
                    "Debe ser llamado desde FrmSearch con un doctor existente.", 
                    "Información", 
                    JOptionPane.INFORMATION_MESSAGE);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables                     
    private javax.swing.JButton jbtnCancelar;
    private javax.swing.JButton jbtnModificar;
    private javax.swing.JComboBox<Speciality> jcmbEspecialidad;
    private javax.swing.JLabel jlblContrasenna;
    private javax.swing.JLabel jlblEdad;
    private javax.swing.JLabel jlblEmail;
    private javax.swing.JLabel jlblEspecialidad;
    private javax.swing.JLabel jlblModificarUsuario;
    private javax.swing.JLabel jlblNombreCompleto;
    private javax.swing.JLabel jlblNumeroDocumento;
    private javax.swing.JPanel jpnlModificar;
    private javax.swing.JTextField jtextContrasenna;
    private javax.swing.JTextField jtextEdad;
    private javax.swing.JTextField jtextEmail;
    private javax.swing.JTextField jtextNombreCompleto;
    private javax.swing.JTextField jtextNumeroDocumento;
    // End of variables declaration//GEN-END:variables
}