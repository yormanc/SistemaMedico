/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
import javax.swing.JOptionPane;
import Services.MedicSystemService;
import models.Speciality;
import models.Doctor;


public class FrmAdd extends javax.swing.JFrame {
    private final MedicSystemService medicSystemService;
    
    /**
     * Creates new form FrmAdd
     */
    public FrmAdd(MedicSystemService medicSystemService) {
        this.medicSystemService = medicSystemService;
        initComponents();
        loadSpecialities();
    }

    private void loadSpecialities() {
        jcmbEspecialidad.removeAllItems(); // Limpiar items previos
        for (Speciality s : medicSystemService.specialityRepository.getAll()) {
            jcmbEspecialidad.addItem(s);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jlblCrearMedico = new javax.swing.JLabel();
        jlblNombreCompleto = new javax.swing.JLabel();
        jtextNombreCompleto = new javax.swing.JTextField();
        jlblNumeroDocumento = new javax.swing.JLabel();
        jtextNumeroDocumento = new javax.swing.JTextField();
        jlblContrasenaa = new javax.swing.JLabel();
        jtextContrasenna = new javax.swing.JTextField();
        jlblEdad = new javax.swing.JLabel();
        jtextEdad = new javax.swing.JTextField();
        jlblEmail = new javax.swing.JLabel();
        jtextEmail = new javax.swing.JTextField();
        jlblEmail1 = new javax.swing.JLabel();
        jcmbEspecialidad = new javax.swing.JComboBox<>();
        jbtGuardar = new javax.swing.JButton();
        jbtCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Crear Medico");
        setPreferredSize(new java.awt.Dimension(400, 388));
        setResizable(false);

        jlblCrearMedico.setFont(new java.awt.Font("Segoe UI Semibold", 0, 24)); // NOI18N
        jlblCrearMedico.setText("  CREAR MEDICO");
        jlblCrearMedico.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jlblNombreCompleto.setText("    Nombre Completo");
        jlblNombreCompleto.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jlblNumeroDocumento.setText("   Número Documento");
        jlblNumeroDocumento.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jlblContrasenaa.setText("        Contraseña");
        jlblContrasenaa.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jlblEdad.setText("             Edad");
        jlblEdad.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jlblEmail.setText("             Email");
        jlblEmail.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jlblEmail1.setText("           Especialidad");
        jlblEmail1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jcmbEspecialidad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jbtGuardar.setText("Guardar");
        jbtGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtGuardarActionPerformed(evt);
            }
        });

        jbtCancelar.setText("Cancelar");
        jbtCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jlblCrearMedico, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(93, 93, 93))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jlblNumeroDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jtextNumeroDocumento))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jlblContrasenaa, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jtextContrasenna))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jlblEmail1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jcmbEspecialidad, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jlblNombreCompleto, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jtextNombreCompleto, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jlblEdad, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jtextEdad, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jlblEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jtextEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap(33, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addComponent(jbtGuardar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbtCancelar)
                .addGap(82, 82, 82))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jlblCrearMedico)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblNombreCompleto)
                    .addComponent(jtextNombreCompleto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblNumeroDocumento)
                    .addComponent(jtextNumeroDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblContrasenaa)
                    .addComponent(jtextContrasenna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblEdad)
                    .addComponent(jtextEdad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblEmail)
                    .addComponent(jtextEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblEmail1)
                    .addComponent(jcmbEspecialidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtGuardar)
                    .addComponent(jbtCancelar))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        jlblCrearMedico.getAccessibleContext().setAccessibleParent(jlblCrearMedico);
        jlblNombreCompleto.getAccessibleContext().setAccessibleParent(jlblNombreCompleto);
        jtextNombreCompleto.getAccessibleContext().setAccessibleParent(jtextNombreCompleto);
        jlblNumeroDocumento.getAccessibleContext().setAccessibleParent(jlblNumeroDocumento);
        jtextNumeroDocumento.getAccessibleContext().setAccessibleParent(jtextNumeroDocumento);
        jlblContrasenaa.getAccessibleContext().setAccessibleParent(jlblContrasenaa);
        jtextContrasenna.getAccessibleContext().setAccessibleParent(jtextContrasenna);
        jlblEdad.getAccessibleContext().setAccessibleParent(jlblEdad);
        jlblEmail.getAccessibleContext().setAccessibleParent(jlblEmail);
        jtextEmail.getAccessibleContext().setAccessibleParent(jtextEmail);
        jcmbEspecialidad.getAccessibleContext().setAccessibleParent(jcmbEspecialidad);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtGuardarActionPerformed
        try {
            // Obtener datos de los campos
            String name = jtextNombreCompleto.getText().trim();
            String idText = jtextNumeroDocumento.getText().trim();
            String password = jtextContrasenna.getText().trim();
            String ageText = jtextEdad.getText().trim();
            String email = jtextEmail.getText().trim();

            // Validar que no estén vacíos
            if (name.isEmpty() || idText.isEmpty() || password.isEmpty() || 
                ageText.isEmpty() || email.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Debe llenar todos los campos");
                return;
            }

            // Validar que se haya seleccionado una especialidad
            if (jcmbEspecialidad.getSelectedItem() == null) {
                JOptionPane.showMessageDialog(this, "Debe seleccionar una especialidad");
                return;
            }

            // Parsear valores numéricos
            int id = Integer.parseInt(idText);
            int age = Integer.parseInt(ageText);

            // Validaciones adicionales
            if (age <= 0 || age > 150) {
                JOptionPane.showMessageDialog(this, "La edad debe estar entre 1 y 150");
                return;
            }

            if (id <= 0) {
                JOptionPane.showMessageDialog(this, "El número de documento debe ser positivo");
                return;
            }

            if (password.length() < 6) {
                JOptionPane.showMessageDialog(this, 
                    "La contraseña debe tener al menos 6 caracteres");
                return;
            }

            if (!email.contains("@") || !email.contains(".")) {
                JOptionPane.showMessageDialog(this, "Email inválido");
                return;
            }

            // Validar que el nombre no contenga solo números
            if (name.matches("\\d+")) {
                JOptionPane.showMessageDialog(this, 
                    "El nombre no puede contener solo números");
                return;
            }

            // Obtener especialidad seleccionada
            Speciality speciality = (Speciality) jcmbEspecialidad.getSelectedItem();

            // Registrar doctor
            boolean success = medicSystemService.registerDoctor(name, id, password, age, email, speciality);

            if (success) {
                JOptionPane.showMessageDialog(this, 
                    "Médico agregado exitosamente", 
                    "Éxito", 
                    JOptionPane.INFORMATION_MESSAGE);
                clearFields();
                jtextNombreCompleto.requestFocus(); // Enfocar el primer campo para facilitar siguiente registro
            } else {
                JOptionPane.showMessageDialog(this, 
                    "Error al agregar el médico. Puede que el documento ya esté registrado.",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            }

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, 
                "Edad e ID deben ser números válidos (sin puntos ni comas)",
                "Error de Formato",
                JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, 
                "Error inesperado: " + e.getMessage(),
                "Error",
                JOptionPane.ERROR_MESSAGE);
            e.printStackTrace(); // Para debug
        }
    }//GEN-LAST:event_jbtGuardarActionPerformed

    private void clearFields() {
        jtextNombreCompleto.setText("");
        jtextEdad.setText("");
        jtextEmail.setText("");
        jtextNumeroDocumento.setText("");
        jtextContrasenna.setText("");
        if (jcmbEspecialidad.getItemCount() > 0) {
            jcmbEspecialidad.setSelectedIndex(0);
        }
    }

    private void jbtCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtCancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_jbtCancelarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmAdd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmAdd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmAdd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmAdd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JOptionPane.showMessageDialog(null,
                    "Este formulario debe iniciarse desde la aplicación principal\n" +
                    "con un MedicSystemService válido.",
                    "Información",
                    JOptionPane.INFORMATION_MESSAGE);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton jbtCancelar;
    private javax.swing.JButton jbtGuardar;
    private javax.swing.JComboBox<Speciality> jcmbEspecialidad;
    private javax.swing.JLabel jlblContrasenaa;
    private javax.swing.JLabel jlblCrearMedico;
    private javax.swing.JLabel jlblEdad;
    private javax.swing.JLabel jlblEmail;
    private javax.swing.JLabel jlblEmail1;
    private javax.swing.JLabel jlblNombreCompleto;
    private javax.swing.JLabel jlblNumeroDocumento;
    private javax.swing.JTextField jtextContrasenna;
    private javax.swing.JTextField jtextEdad;
    private javax.swing.JTextField jtextEmail;
    private javax.swing.JTextField jtextNombreCompleto;
    private javax.swing.JTextField jtextNumeroDocumento;
    // End of variables declaration//GEN-END:variables

    public MedicSystemService getMedicSystemService() {
        return medicSystemService;
    }

    public javax.swing.JPanel getjPanel1() {
        return jPanel1;
    }

    public void setjPanel1(javax.swing.JPanel jPanel1) {
        this.jPanel1 = jPanel1;
    }

    public javax.swing.JButton getJbtCancelar() {
        return jbtCancelar;
    }

    public void setJbtCancelar(javax.swing.JButton jbtCancelar) {
        this.jbtCancelar = jbtCancelar;
    }

    public javax.swing.JButton getJbtGuardar() {
        return jbtGuardar;
    }

    public void setJbtGuardar(javax.swing.JButton jbtGuardar) {
        this.jbtGuardar = jbtGuardar;
    }

    public javax.swing.JComboBox<Speciality> getJcmbEspecialidad() {
        return jcmbEspecialidad;
    }

    public void setJcmbEspecialidad(javax.swing.JComboBox<Speciality> jcmbEspecialidad) {
        this.jcmbEspecialidad = jcmbEspecialidad;
    }

    public javax.swing.JLabel getJlblContrasenaa() {
        return jlblContrasenaa;
    }

    public void setJlblContrasenaa(javax.swing.JLabel jlblContrasenaa) {
        this.jlblContrasenaa = jlblContrasenaa;
    }

    public javax.swing.JLabel getJlblCrearMedico() {
        return jlblCrearMedico;
    }

    public void setJlblCrearMedico(javax.swing.JLabel jlblCrearMedico) {
        this.jlblCrearMedico = jlblCrearMedico;
    }

    public javax.swing.JLabel getJlblEdad() {
        return jlblEdad;
    }

    public void setJlblEdad(javax.swing.JLabel jlblEdad) {
        this.jlblEdad = jlblEdad;
    }

    public javax.swing.JLabel getJlblEmail() {
        return jlblEmail;
    }

    public void setJlblEmail(javax.swing.JLabel jlblEmail) {
        this.jlblEmail = jlblEmail;
    }

    public javax.swing.JLabel getJlblEmail1() {
        return jlblEmail1;
    }

    public void setJlblEmail1(javax.swing.JLabel jlblEmail1) {
        this.jlblEmail1 = jlblEmail1;
    }

    public javax.swing.JLabel getJlblNombreCompleto() {
        return jlblNombreCompleto;
    }

    public void setJlblNombreCompleto(javax.swing.JLabel jlblNombreCompleto) {
        this.jlblNombreCompleto = jlblNombreCompleto;
    }

    public javax.swing.JLabel getJlblNumeroDocumento() {
        return jlblNumeroDocumento;
    }

    public void setJlblNumeroDocumento(javax.swing.JLabel jlblNumeroDocumento) {
        this.jlblNumeroDocumento = jlblNumeroDocumento;
    }

    public javax.swing.JTextField getJtextContrasenna() {
        return jtextContrasenna;
    }

    public void setJtextContrasenna(javax.swing.JTextField jtextContrasenna) {
        this.jtextContrasenna = jtextContrasenna;
    }

    public javax.swing.JTextField getJtextEdad() {
        return jtextEdad;
    }

    public void setJtextEdad(javax.swing.JTextField jtextEdad) {
        this.jtextEdad = jtextEdad;
    }

    public javax.swing.JTextField getJtextEmail() {
        return jtextEmail;
    }

    public void setJtextEmail(javax.swing.JTextField jtextEmail) {
        this.jtextEmail = jtextEmail;
    }

    public javax.swing.JTextField getJtextNombreCompleto() {
        return jtextNombreCompleto;
    }

    public void setJtextNombreCompleto(javax.swing.JTextField jtextNombreCompleto) {
        this.jtextNombreCompleto = jtextNombreCompleto;
    }

    public javax.swing.JTextField getJtextNumeroDocumento() {
        return jtextNumeroDocumento;
    }

    public void setJtextNumeroDocumento(javax.swing.JTextField jtextNumeroDocumento) {
        this.jtextNumeroDocumento = jtextNumeroDocumento;
    }
}